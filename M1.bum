<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd" org.eventb.core.generated="false" org.eventb.texttools.text_lastmodified="1741024046428" org.eventb.texttools.text_representation="machine M1 refines M0  sees C_Basic_Behavior&#10;&#10;variables offers // current service' offers these services are modelled as capabilities based on the capability model&#10;          response // the response returned to the user&#10;          requestedCapability // the requested service/offer&#10;          variantsOf&#10;          /* the set of current relationships between offers&#10;             the definition of offers and variantsOf will allow to organize&#10;             the existing offers(capabilities) in a directed acyclic graph.&#10;             this is the first refinement where events are splitted in many events */&#10;&#10;&#10;invariants&#10;  @inv1 offers ⊆ Capability_valid // offers must be valid capabilities&#10;  @inv2 requestedCapability= ∅ ∨ requestedCapability ∈ Capability_valid // user request is either ∅ when there is no request  or a valid capability&#10;  @inv3 variantsOf={c1↦c2∣c1∈offers ∧ c2∈offers ∧ c1↦c2∈ variantOf} // variantsOf is the set variantOf between offers&#10;  @inv4a requestedCapability ∈ offers ⇒ response = {requestedCapability} // if requestedCapability is in offers then response is eqauls {requestedCapability}&#10;  @inv4b requestedCapability ∉ offers  ⇒ response ={offer ∣ offer ∈ offers ∧ requestedCapability↦offer ∈ variantOf} // if requestedCapability is not in offers then response is the set of generic offers of the requestedCapability&#10;&#10;events&#10;  event INITIALISATION extends INITIALISATION&#10;  end&#10;&#10;  event addOfferWhenRequestIsEqualToOffer // adding new offer case: when request is equals to the new offer response is updated and becomes {offer}&#10;  refines addOffer&#10;    any offer // a service' offer described based on the capability model&#10;&#10;    where&#10;      @grd1 offer ∈ Capability_valid // offer must be a valid capability&#10;      @grd2 offer ∉ offers // offer is not already in the repository&#10;      @grd3 offer = requestedCapability&#10;    then&#10;      @act1 offers ≔ offers ∪ {offer} // add offer to exissting offers&#10;      @act2 response ≔ {offer} // update offer as offer=requestedCapability and response={requestedCapability} then response= {offer}&#10;      @act3 variantsOf≔ variantsOf ∪ addNewVariantsOf(offers↦offer) // add new relationships&#10;  end&#10;&#10;  event addOfferWhenOfferIsVariantOfRequest // adding new offer case: when request is variantOf  the new offer and request is not in offers  then offer  is added to response&#10;  refines addOffer&#10;    any offer // a service' offer described based on the capability model&#10;&#10;    where&#10;      @grd1 offer ∈ Capability_valid // offer must be a valid capability&#10;      @grd2 offer ∉ offers // offer is not already in the repository&#10;      @grd3 requestedCapability↦offer ∈ variantOf&#10;      @grd4 requestedCapability ∉ offers&#10;    then&#10;      @act1 offers ≔ offers ∪ {offer} // add offer to offers&#10;      @act2 response ≔ response ∪ {offer} // add offer to response&#10;      @act3 variantsOf≔ variantsOf ∪ addNewVariantsOf(offers↦offer) // add relationships between the new offer and existing ones&#10;  end&#10;&#10;  event addOffer // adding new offer case: when request is not equals to the new offer and not variant of the new offer in this case response does not  change&#10;  refines addOffer&#10;    any offer // a service' offer described based on the capability model&#10;&#10;    where&#10;      @grd1 offer ∈ Capability_valid // offer must be a valid capability&#10;      @grd2 offer ∉ offers // offer is not already in the repository&#10;      @grd3 requestedCapability↦offer ∉ variantOf&#10;      @grd4 offer ≠ requestedCapability&#10;    then&#10;      @act1 offers ≔ offers ∪ {offer} // add offer to offers&#10;      @act2 variantsOf≔ variantsOf ∪ addNewVariantsOf(offers↦offer) // add relationships between the new offer and existing ones&#10;  end&#10;&#10;  event removeOffer // remove offer from the current offers case: when offer is not in the response&#10;  refines removeOffer&#10;    any offer // a service' offer described based on the capability model&#10;&#10;    where&#10;      @grd1 offer ∈ offers // offer is already in offers&#10;      @grd2 offer ∉ response&#10;    then&#10;      @act1 offers≔ offers ∖{offer} // remove the offer from offers&#10;      @act2 variantsOf≔ variantsOf ∖ addNewVariantsOf(offers↦offer) // remove relationships between the offer and others&#10;  end&#10;&#10;  event removeOfferWhenOfferIsInResponseAndEqualsRequest // remove offer when offer is in response and requestedCapability still in offers after removing offer&#10;  refines removeOffer&#10;    any offer // a service' offer described based on the capability model&#10;&#10;    where&#10;      @grd1 offer ∈ offers // offer is already in offers&#10;      @grd2 offer ∈  response&#10;      @grd3 requestedCapability ∈ offers∖ {offer} // requestedCapability is in offers&#10;    then&#10;      @act1 offers≔ offers ∖{offer} // remove offer&#10;      @act2 variantsOf≔ variantsOf ∖ addNewVariantsOf(offers↦offer) // remove links to offer&#10;      @act3 response≔ {requestedCapability} // update response&#10;  end&#10;&#10;  event removeOfferWhenOfferIsInResponseAndNotEqualToRequest // remove offer when offer is in response and requestedCapability is not in offers∖ {offer}&#10;  refines removeOffer&#10;    any offer // a service' offer described based on the capability model&#10;&#10;    where&#10;      @grd1 offer ∈ offers // offer is already in offers&#10;      @grd2 offer ∈  response&#10;      @grd3 requestedCapability ∈  Capability_valid // request must be a valid capability&#10;      @grd4 requestedCapability ∉ offers∖ {offer}&#10;    then&#10;      @act1 offers≔ offers ∖{offer} // remove offer&#10;      @act2 variantsOf≔ variantsOf ∖ addNewVariantsOf(offers↦offer) // remove links with offer&#10;      @act3 response≔  {offer0 ∣ offer0 ∈ offers∖{offer} ∧ requestedCapability↦offer0 ∈ variantOf} // update response as requestedCapability is not in offers&#10;  end&#10;&#10;  event getOffersForNewRequestWhenRequestIsInOffer // retrieve offers for a user request when request belongs to offers&#10;  refines getOffersForNewRequest&#10;    any request // request is described based on the capability model&#10;&#10;    where&#10;      @grd1 request ∈ Capability_valid // request must be a valid capability&#10;      @grd2 request ∈ offers // request belongs to offers&#10;    then&#10;      @act1 requestedCapability ≔ request&#10;      @act2 response≔ {request} // response is {request} as request belongs to offers&#10;  end&#10;&#10;  event getOffersForNewRequestWhenRequestIsNotInOffer // retrieve offers when request does not belong to offers&#10;  refines getOffersForNewRequest&#10;    any request // request is described based on the capability model&#10;&#10;    where&#10;      @grd1 request ∈ Capability_valid // request must be a valid capability&#10;      @grd2 request ∉ offers&#10;    then&#10;      @act1 requestedCapability ≔ request&#10;      @act2 response≔   {offer ∣ offer ∈ offers ∧ request↦offer ∈ variantOf} // response is set of offers linked to request by the variantOf relation&#10;  end&#10;end&#10;" version="5">
    <org.eventb.core.refinesMachine name="'" org.eventb.core.target="M0"/>
    <org.eventb.core.seesContext name="_t077sOn5Ee-FCLy2ldeH6A" org.eventb.core.target="C_Basic_Behavior"/>
    <org.eventb.core.variable name="_t0-X9On5Ee-FCLy2ldeH6A" org.eventb.core.comment="current service' offers these services are modelled as capabilities based on the capability model" org.eventb.core.generated="false" org.eventb.core.identifier="offers"/>
    <org.eventb.core.variable name="_t0-_AOn5Ee-FCLy2ldeH6A" org.eventb.core.comment="the response returned to the user" org.eventb.core.generated="false" org.eventb.core.identifier="response"/>
    <org.eventb.core.variable name="_t0-_Aen5Ee-FCLy2ldeH6A" org.eventb.core.comment="the requested service/offer" org.eventb.core.generated="false" org.eventb.core.identifier="requestedCapability"/>
    <org.eventb.core.variable name="_t0-_Aun5Ee-FCLy2ldeH6A" org.eventb.core.comment="the set of current relationships between offers&#10;             the definition of offers and variantsOf will allow to organize&#10;             the existing offers(capabilities) in a directed acyclic graph.&#10;             this is the first refinement where events are splitted in many events " org.eventb.core.generated="false" org.eventb.core.identifier="variantsOf"/>
    <org.eventb.core.event name="_t077sOn5Ee-FCLy2ldeH6B" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="INITIALISATION"/>
    <org.eventb.core.event name="_kF5eAOoOEe-FCLy2ldeH6A" org.eventb.core.comment="adding new offer case: when request is equals to the new offer response is updated and becomes {offer}" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="addOfferWhenRequestIsEqualToOffer">
        <org.eventb.core.refinesEvent name="_8oXHMOoOEe-FCLy2ldeH6A" org.eventb.core.target="addOffer"/>
        <org.eventb.core.parameter name="_kF5eAeoOEe-FCLy2ldeH6A" org.eventb.core.comment="a service' offer described based on the capability model" org.eventb.core.generated="false" org.eventb.core.identifier="offer"/>
        <org.eventb.core.guard name="_kF5eAuoOEe-FCLy2ldeH6A" org.eventb.core.comment="offer must be a valid capability" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="offer ∈ Capability_valid"/>
        <org.eventb.core.guard name="_kF5eA-oOEe-FCLy2ldeH6A" org.eventb.core.comment="offer is not already in the repository" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="offer ∉ offers"/>
        <org.eventb.core.guard name="_kF5eBuoOEe-FCLy2ldeH6B" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="offer = requestedCapability"/>
        <org.eventb.core.action name="_kF5eBOoOEe-FCLy2ldeH6A" org.eventb.core.assignment="offers ≔ offers ∪ {offer}" org.eventb.core.comment="add offer to exissting offers" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_kF5eBeoOEe-FCLy2ldeH6A" org.eventb.core.assignment="response ≔ {offer}" org.eventb.core.comment="update offer as offer=requestedCapability and response={requestedCapability} then response= {offer}" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
        <org.eventb.core.action name="_kF5eBuoOEe-FCLy2ldeH6A" org.eventb.core.assignment="variantsOf≔ variantsOf ∪ addNewVariantsOf(offers↦offer)" org.eventb.core.comment="add new relationships" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_kF5eB-oOEe-FCLy2ldeH6A" org.eventb.core.comment="adding new offer case: when request is variantOf  the new offer and request is not in offers  then offer  is added to response" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="addOfferWhenOfferIsVariantOfRequest">
        <org.eventb.core.refinesEvent name="_8oYVUOoOEe-FCLy2ldeH6A" org.eventb.core.target="addOffer"/>
        <org.eventb.core.parameter name="_kF6FEOoOEe-FCLy2ldeH6A" org.eventb.core.comment="a service' offer described based on the capability model" org.eventb.core.generated="false" org.eventb.core.identifier="offer"/>
        <org.eventb.core.guard name="_kF6FEeoOEe-FCLy2ldeH6A" org.eventb.core.comment="offer must be a valid capability" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="offer ∈ Capability_valid"/>
        <org.eventb.core.guard name="_kF6FFuoOEe-FCLy2ldeH6B" org.eventb.core.comment="offer is not already in offers" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="offer ∉ offers"/>
        <org.eventb.core.guard name="_kF6FEuoOEe-FCLy2ldeH6A" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="requestedCapability↦offer ∈ variantOf"/>
        <org.eventb.core.guard name="_kF6FE-oOEe-FCLy2ldeH6A" org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="requestedCapability ∉ offers"/>
        <org.eventb.core.action name="_kF6FFOoOEe-FCLy2ldeH6A" org.eventb.core.assignment="offers ≔ offers ∪ {offer}" org.eventb.core.comment="add offer to offers" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_kF6FFeoOEe-FCLy2ldeH6A" org.eventb.core.assignment="response ≔ response ∪ {offer}" org.eventb.core.comment="add offer to response" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
        <org.eventb.core.action name="_kF6FFuoOEe-FCLy2ldeH6A" org.eventb.core.assignment="variantsOf≔ variantsOf ∪ addNewVariantsOf(offers↦offer)" org.eventb.core.comment="add relationships between the new offer and existing ones" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_t077sOn5Ee-FCLy2ldeH6C" org.eventb.core.comment="adding new offer case: when request is not equals to the new offer and not variant of the new offer in this case response does not  change" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="addOffer">
        <org.eventb.core.refinesEvent name="_8oYVUeoOEe-FCLy2ldeH6A" org.eventb.core.target="addOffer"/>
        <org.eventb.core.parameter name="_kF6FF-oOEe-FCLy2ldeH6A" org.eventb.core.comment="a service' offer described based on the capability model" org.eventb.core.generated="false" org.eventb.core.identifier="offer"/>
        <org.eventb.core.guard name="_kF6FGOoOEe-FCLy2ldeH6A" org.eventb.core.comment="offer must be a valid capability" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="offer ∈ Capability_valid"/>
        <org.eventb.core.guard name="_kF6FHOoOEe-FCLy2ldeH6B" org.eventb.core.comment="offer is not already in the repository" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="offer ∉ offers"/>
        <org.eventb.core.guard name="_kF6FGeoOEe-FCLy2ldeH6A" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="requestedCapability↦offer ∉ variantOf"/>
        <org.eventb.core.guard name="_kF6FGuoOEe-FCLy2ldeH6A" org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="offer ≠ requestedCapability"/>
        <org.eventb.core.action name="_kF6FG-oOEe-FCLy2ldeH6A" org.eventb.core.assignment="offers ≔ offers ∪ {offer}" org.eventb.core.comment="add offer to offers" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_kF6FHOoOEe-FCLy2ldeH6A" org.eventb.core.assignment="variantsOf≔ variantsOf ∪ addNewVariantsOf(offers↦offer)" org.eventb.core.comment="add relationships between the new offer and existing ones" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_t077sOn5Ee-FCLy2ldeH6D" org.eventb.core.comment="remove offer from the current offers case: when offer is not in the response" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="removeOffer">
        <org.eventb.core.refinesEvent name="_8oY8YOoOEe-FCLy2ldeH6A" org.eventb.core.target="removeOffer"/>
        <org.eventb.core.parameter name="_kF6sIOoOEe-FCLy2ldeH6A" org.eventb.core.comment="a service' offer described based on the capability model" org.eventb.core.generated="false" org.eventb.core.identifier="offer"/>
        <org.eventb.core.guard name="_kF6sIeoOEe-FCLy2ldeH6A" org.eventb.core.comment="offer is already in offers" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="offer ∈ offers"/>
        <org.eventb.core.guard name="_kF6sIuoOEe-FCLy2ldeH6A" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="offer ∉ response"/>
        <org.eventb.core.action name="_kF6sI-oOEe-FCLy2ldeH6A" org.eventb.core.assignment="offers≔ offers ∖{offer}" org.eventb.core.comment="remove the offer from offers" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_kF6sJOoOEe-FCLy2ldeH6A" org.eventb.core.assignment="variantsOf≔ variantsOf ∖ addNewVariantsOf(offers↦offer)" org.eventb.core.comment="remove relationships between the offer and others" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
    </org.eventb.core.event>
    <org.eventb.core.invariant name="_4-l6cO8MEe-HGeEL2d3rFQ" org.eventb.core.comment="offers must be valid capabilities" org.eventb.core.generated="false" org.eventb.core.label="inv1" org.eventb.core.predicate="offers ⊆ Capability_valid"/>
    <org.eventb.core.invariant name="_4-nIkO8MEe-HGeEL2d3rFQ" org.eventb.core.comment="user request is either ∅ when there is no request  or a valid capability" org.eventb.core.generated="false" org.eventb.core.label="inv2" org.eventb.core.predicate="requestedCapability= ∅ ∨ requestedCapability ∈ Capability_valid"/>
    <org.eventb.core.invariant name="_4-nvoO8MEe-HGeEL2d3rFQ" org.eventb.core.comment="variantsOf is the set variantOf between offers" org.eventb.core.generated="false" org.eventb.core.label="inv3" org.eventb.core.predicate="variantsOf={c1↦c2∣c1∈offers ∧ c2∈offers ∧ c1↦c2∈ variantOf}"/>
    <org.eventb.core.invariant name="_kF6sJeoOEe-FCLy2ldeH6A" org.eventb.core.comment="if requestedCapability is in offers then response is eqauls {requestedCapability}" org.eventb.core.generated="false" org.eventb.core.label="inv4a" org.eventb.core.predicate="requestedCapability ∈ offers ⇒ response = {requestedCapability}"/>
    <org.eventb.core.invariant name="_kF7TMOoOEe-FCLy2ldeH6A" org.eventb.core.comment="if requestedCapability is not in offers then response is the set of generic offers of the requestedCapability" org.eventb.core.generated="false" org.eventb.core.label="inv4b" org.eventb.core.predicate="requestedCapability ∉ offers  ⇒ response ={offer ∣ offer ∈ offers ∧ requestedCapability↦offer ∈ variantOf}"/>
    <org.eventb.core.event name="_kF7TMeoOEe-FCLy2ldeH6A" org.eventb.core.comment="remove offer when offer is in response and requestedCapability still in offers after removing offer" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="removeOfferWhenOfferIsInResponseAndEqualsRequest">
        <org.eventb.core.refinesEvent name="_8oY8YeoOEe-FCLy2ldeH6A" org.eventb.core.target="removeOffer"/>
        <org.eventb.core.parameter name="_kF7TMuoOEe-FCLy2ldeH6A" org.eventb.core.comment="a service' offer described based on the capability model" org.eventb.core.generated="false" org.eventb.core.identifier="offer"/>
        <org.eventb.core.guard name="_kF7TM-oOEe-FCLy2ldeH6A" org.eventb.core.comment="offer is already in offers" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="offer ∈ offers"/>
        <org.eventb.core.guard name="_kF7TNOoOEe-FCLy2ldeH6A" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="offer ∈  response"/>
        <org.eventb.core.guard name="_kF7TNeoOEe-FCLy2ldeH6A" org.eventb.core.comment="requestedCapability is in offers" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="requestedCapability ∈ offers∖ {offer}"/>
        <org.eventb.core.action name="_kF7TNuoOEe-FCLy2ldeH6A" org.eventb.core.assignment="offers≔ offers ∖{offer}" org.eventb.core.comment="remove offer" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_kF7TN-oOEe-FCLy2ldeH6A" org.eventb.core.assignment="variantsOf≔ variantsOf ∖ addNewVariantsOf(offers↦offer)" org.eventb.core.comment="remove links to offer" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
        <org.eventb.core.action name="_kF7TOOoOEe-FCLy2ldeH6A" org.eventb.core.assignment="response≔ {requestedCapability}" org.eventb.core.comment="update response" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_kF7TOeoOEe-FCLy2ldeH6A" org.eventb.core.comment="remove offer when offer is in response and requestedCapability is not in offers∖ {offer}" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="removeOfferWhenOfferIsInResponseAndNotEqualToRequest">
        <org.eventb.core.refinesEvent name="_8oZjcOoOEe-FCLy2ldeH6A" org.eventb.core.target="removeOffer"/>
        <org.eventb.core.parameter name="_kF7TOuoOEe-FCLy2ldeH6A" org.eventb.core.comment="a service' offer described based on the capability model" org.eventb.core.generated="false" org.eventb.core.identifier="offer"/>
        <org.eventb.core.guard name="_kF7TO-oOEe-FCLy2ldeH6A" org.eventb.core.comment="offer is already in offers" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="offer ∈ offers"/>
        <org.eventb.core.guard name="_kF7TPOoOEe-FCLy2ldeH6A" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="offer ∈  response"/>
        <org.eventb.core.guard name="_kF7TPeoOEe-FCLy2ldeH6A" org.eventb.core.comment="request must be a valid capability" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="requestedCapability ∈  Capability_valid"/>
        <org.eventb.core.guard name="_kF7TPuoOEe-FCLy2ldeH6A" org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="requestedCapability ∉ offers∖ {offer}"/>
        <org.eventb.core.action name="_kF76QOoOEe-FCLy2ldeH6A" org.eventb.core.assignment="offers≔ offers ∖{offer}" org.eventb.core.comment="remove offer" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_kF76QeoOEe-FCLy2ldeH6A" org.eventb.core.assignment="variantsOf≔ variantsOf ∖ addNewVariantsOf(offers↦offer)" org.eventb.core.comment="remove links with offer" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
        <org.eventb.core.action name="_kF76QuoOEe-FCLy2ldeH6A" org.eventb.core.assignment="response≔  {offer0 ∣ offer0 ∈ offers∖{offer} ∧ requestedCapability↦offer0 ∈ variantOf}" org.eventb.core.comment="update response as requestedCapability is not in offers" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_kF76Q-oOEe-FCLy2ldeH6A" org.eventb.core.comment="retrieve offers for a user request when request belongs to offers" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="getOffersForNewRequestWhenRequestIsInOffer">
        <org.eventb.core.refinesEvent name="_8oZjceoOEe-FCLy2ldeH6A" org.eventb.core.target="getOffersForNewRequest"/>
        <org.eventb.core.parameter name="_kF76ROoOEe-FCLy2ldeH6A" org.eventb.core.comment="request is described based on the capability model" org.eventb.core.generated="false" org.eventb.core.identifier="request"/>
        <org.eventb.core.guard name="_kF76ReoOEe-FCLy2ldeH6A" org.eventb.core.comment="request must be a valid capability" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="request ∈ Capability_valid"/>
        <org.eventb.core.guard name="_kF76RuoOEe-FCLy2ldeH6A" org.eventb.core.comment="request belongs to offers" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="request ∈ offers"/>
        <org.eventb.core.action name="_kF76R-oOEe-FCLy2ldeH6A" org.eventb.core.assignment="requestedCapability ≔ request" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_kF76SOoOEe-FCLy2ldeH6A" org.eventb.core.assignment="response≔ {request}" org.eventb.core.comment="response is {request} as request belongs to offers" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_kF76SeoOEe-FCLy2ldeH6A" org.eventb.core.comment="retrieve offers when request does not belong to offers" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="getOffersForNewRequestWhenRequestIsNotInOffer">
        <org.eventb.core.refinesEvent name="_8oaKgOoOEe-FCLy2ldeH6A" org.eventb.core.target="getOffersForNewRequest"/>
        <org.eventb.core.parameter name="_kF76SuoOEe-FCLy2ldeH6A" org.eventb.core.comment="request is described based on the capability model" org.eventb.core.generated="false" org.eventb.core.identifier="request"/>
        <org.eventb.core.guard name="_kF76S-oOEe-FCLy2ldeH6A" org.eventb.core.comment="request must be a valid capability" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="request ∈ Capability_valid"/>
        <org.eventb.core.guard name="_kF76TOoOEe-FCLy2ldeH6A" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="request ∉ offers"/>
        <org.eventb.core.action name="_kF76TeoOEe-FCLy2ldeH6A" org.eventb.core.assignment="requestedCapability ≔ request" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_kF76TuoOEe-FCLy2ldeH6A" org.eventb.core.assignment="response≔   {offer ∣ offer ∈ offers ∧ request↦offer ∈ variantOf}" org.eventb.core.comment="response is set of offers linked to request by the variantOf relation" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
    </org.eventb.core.event>
</org.eventb.core.machineFile>
